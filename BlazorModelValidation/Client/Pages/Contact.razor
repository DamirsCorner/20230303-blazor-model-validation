@page "/contact"
@using BlazorModelValidation.Shared;
@using System.Text.Json;
@inject IMessagesService MessagesService;
@inject ILogger<Contact> Logger;

<PageTitle>Contact</PageTitle>

<h1>Contact</h1>

<EditForm Model="@message" OnSubmit="@HandleSubmit">
    <div class="form-group">
        <label for="name">Name</label>
        <InputText class="form-control" id="name" @bind-Value="message.Name" />
    </div>
    <div class="form-group">
        <label for="email">Email</label>
        <InputText class="form-control" id="email" @bind-Value="message.Email" />
    </div>
    <div class="form-group">
        <label for="subject">Subject</label>
        <InputText class="form-control" id="subject" @bind-Value="message.Subject" />
    </div>
    <div class="form-group">
        <label for="body">Body</label>
        <InputTextArea class="form-control" id="body" @bind-Value="message.Body" />
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    private Message message = new();

    private async Task HandleSubmit()
    {
        try {
            await MessagesService.SendMessage(message);
            Logger.LogInformation($"Message sent: {JsonSerializer.Serialize(message)}");
            message = new();
        }
        catch (Exception ex) {
            Logger.LogInformation($"Failed to submit form: {ex.Message}");
        }
    }
}
